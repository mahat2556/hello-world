func (t *SimpleChaincode) QueryAllExpenses(stub shim.ChaincodeStubInterface, args []string) ([]byte, error) {
	// 0 award id
	if len(args) != 1 {
		return nil, errors.New("Number of arguments is not correct. Expected 1")
	}
	if len(args[0]) <= 0 {
		return nil, errors.New("1st argument must be a non-empty string")
	}

	awardAsBytes, err := stub.GetState(args[0])
	if err != nil {
		return nil, errors.New("Failed to get award.")
	}

	awardPlain := Award{}
	json.Unmarshal(awardAsBytes, &awardPlain)

	expenses := awardPlain.Expenses
	awardAsBytes, _ = json.Marshal(expenses)

	//awardAsBytes = []byte("string")

	return awardAsBytes, nil
}